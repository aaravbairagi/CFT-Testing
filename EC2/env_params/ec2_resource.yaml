Parameters:
  VPC:
    Type: String
    Description: The VPC identity
    Default: vpc-09814294f140cac4e

  SubnetA:
    Type: String
    Description: The subnet where to launch the service
    Default: subnet-0dbe095a74d090f71

  SubnetB:
    Type: String
    Description: The subnet where to Launch the service
    Default: subnet-0876769b280289250


  EC2SecurityGroup:
    Type: String
    Description: Security group for mount target
    Default: sg-04153325b23fe6b86



Mappings:

    RegionToAmazonAMI:
        us-east-1:
            HVM64: ami-09479453c5cde9639
        us-east-2:
            HVM64: ami-023c8dbf8268fb3ca
        us-west-1:
            HVM64: ami-06ff511fea5db2c99
        us-west-2:
            HVM64: ami-0bb5806b2e825a199




Resources:
    # ELB Security Group allowing Port 80 from anywhere
    ELBSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: 'SSH and Port 80'
            VpcId:
              Ref: VPC
            SecurityGroupIngress:
                - IpProtocol: tcp
                  FromPort: 80
                  ToPort: 80
                  CidrIp: 0.0.0.0/0

    # Linux Instance with Apache running on Port 80
    MyEc2Instance:
      Type: AWS::EC2::Instance
      Properties:
        ImageId:
          Fn::FindInMap:
             - RegionToAmazonAMI
             - Ref: 'AWS::Region'
             - HVM64
        InstanceInitiatedShutdownBehavior: stop
        InstanceType: t2.nano
        Monitoring: 'true'
#        NetworkInterfaces:
#        - AssociatePublicIpAddress: 'true'
#          DeviceIndex: "0"
        SubnetId:
          Ref: SubnetA
        Tenancy: default
    # Target Group
    EC2TargetGroup:
      Type: AWS::ElasticLoadBalancingV2::TargetGroup
      Properties:
        HealthCheckIntervalSeconds: 30
        HealthCheckProtocol: HTTP
        HealthCheckTimeoutSeconds: 15
        HealthyThresholdCount: 5
        Matcher:
          HttpCode: '200'
        Name: EC2TargetGroup
        Port: 80
        Protocol: HTTP
        TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: '20'
        Targets:
        - Id:
            Ref: MyEc2Instance
          Port: 80
        UnhealthyThresholdCount: 3
        VpcId:
          Ref: 'VPC'
        Tags:
        - Key: Name
          Value: EC2TargetGroup
        - Key: Port
          Value: 80

    #ELB (ALB)
    ALBListener:
      Type: AWS::ElasticLoadBalancingV2::Listener
      Properties:
        DefaultActions:
          - Type: forward
            TargetGroupArn:
              Ref: EC2TargetGroup
        LoadBalancerArn:
            Ref: ApplicationLoadBalancer
        Port: 80
        Protocol: HTTP
    ApplicationLoadBalancer:
      Type: AWS::ElasticLoadBalancingV2::LoadBalancer
      Properties:
        Scheme: internet-facing # or internal
        Subnets:
        - Ref:  SubnetA
        - Ref:  SubnetB
        SecurityGroups:
        - Ref: ELBSecurityGroup
    
    InternetGateway:
        Type: 'AWS::EC2::InternetGateway'
        Properties:
            Tags:
                - Key: 'Name'
                  Value:
                      Ref: 'AWS::StackName'

    # Associate the gateway to the VPC

  
